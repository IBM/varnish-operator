name: end-to-end tests

on: pull_request

jobs:

  kube1_18:
    name: End to end tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        kubernetes-version: [ "1.24", "1.23", "1.22", "1.21"]
        include:
        - kubernetes-version: "1.24"
          kind-node: kindest/node:v1.24.0@sha256:0866296e693efe1fed79d5e6c7af8df71fc73ae45e3679af05342239cdc5bc8e
        - kubernetes-version: "1.23"
          kind-node: kindest/node:v1.23.6@sha256:b1fa224cc6c7ff32455e0b1fd9cbfd3d3bc87ecaa8fcb06961ed1afb3db0f9ae
        - kubernetes-version: "1.22"
          kind-node: kindest/node:v1.22.9@sha256:8135260b959dfe320206eb36b3aeda9cffcb262f4b44cda6b33f7bb73f453105
        - kubernetes-version: "1.21"
          kind-node: kindest/node:v1.21.12@sha256:f316b33dd88f8196379f38feb80545ef3ed44d9197dca1bfd48bcb1583210207
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ^1.19
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Get dependencies
        run: go mod download
      - name: build images
        run: |
          docker build --platform linux/amd64 --build-arg BUILDPLATFORM=linux/amd64 -f Dockerfile -t ibmcom/varnish-operator:local .
          docker build --platform linux/amd64 --build-arg BUILDPLATFORM=linux/amd64 -f Dockerfile.varnishd -t ibmcom/varnish:local .
          docker build --platform linux/amd64 --build-arg BUILDPLATFORM=linux/amd64 -f Dockerfile.controller -t ibmcom/varnish-controller:local .
          docker build --platform linux/amd64 --build-arg BUILDPLATFORM=linux/amd64 -f Dockerfile.exporter -t ibmcom/varnish-metrics-exporter:local .
      - name: Create k8s Kind Cluster ${{ matrix.kubernetes-version }}
        uses: helm/kind-action@v1.3.0
        with:
          version: v0.14.0
          cluster_name: e2e-tests
          node_image: ${{ matrix.kind-node }}
          wait: 120s
      - name: create namespace
        run: kubectl create namespace varnish-operator
      - name: load images
        run: |
          kind load --name e2e-tests docker-image ibmcom/varnish-operator:local
          kind load --name e2e-tests docker-image ibmcom/varnish:local
          kind load --name e2e-tests docker-image ibmcom/varnish-controller:local
          kind load --name e2e-tests docker-image ibmcom/varnish-metrics-exporter:local
      - name: install operator
        id: helm
        run: helm install varnish-operator --debug --namespace=varnish-operator varnish-operator --wait --set container.imagePullPolicy=Never --set container.image=ibmcom/varnish-operator:local
      - name: run tests
        id: e2e
        run: go test -count=1 ./tests #-count=1 is to disable tests caching.
      - name: capture logs if e2e failed
        if: ${{ always() && (steps.e2e.outcome == 'failure' || steps.helm.outcome == 'failure') }}
        run: |
          mkdir ./kind-logs
          kind export logs ./kind-logs --name e2e-tests
          tar -cvf kind-e2e-logs-${{ matrix.kubernetes-version }}.tar ./kind-logs
      - name: upload kind logs artifact
        if: ${{ always() && (steps.e2e.outcome == 'failure' || steps.helm.outcome == 'failure') }}
        uses: actions/upload-artifact@v2
        with:
          name: kind-e2e-logs-${{ matrix.kubernetes-version }}.tar
          path: kind-e2e-logs-${{ matrix.kubernetes-version }}.tar
          retention-days: 7
      - name: upload e2e test logs artifact
        if: ${{ always() && steps.e2e.outcome == 'failure' }}
        uses: actions/upload-artifact@v2
        with:
          name: debug-logs-${{ matrix.kubernetes-version }}.tar
          path: /tmp/debug-logs/
          retention-days: 7
